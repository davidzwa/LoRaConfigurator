// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: lora_device_messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LoRa {

  /// <summary>Holder for reflection information generated from lora_device_messages.proto</summary>
  public static partial class LoraDeviceMessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for lora_device_messages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LoraDeviceMessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chpsb3JhX2RldmljZV9tZXNzYWdlcy5wcm90bxoec2hhcmVkL2V4cGVyaW1l",
            "bnRfY29uZmlnLnByb3RvGhVzaGFyZWQvZmlybXdhcmUucHJvdG8iIgoPUmVx",
            "dWVzdEJvb3RJbmZvEg8KB1JlcXVlc3QYASABKAgi3AEKE0RldmljZUNvbmZp",
            "Z3VyYXRpb24SNQoVc2VxdWVuY2VDb25maWd1cmF0aW9uGAEgASgLMhYuU2Vx",
            "dWVuY2VDb25maWd1cmF0aW9uEh4KFmVuYWJsZVNlcXVlbmNlVHJhbnNtaXQY",
            "AiABKAgSEwoLYWNrUmVxdWlyZWQYAyABKAgSPAoVdHJhbnNtaXRDb25maWd1",
            "cmF0aW9uGAQgASgLMh0uVHJhbnNtaXRSZWNlaXZlQ29uZmlndXJhdGlvbhIb",
            "ChNhcHBseVRyYW5zbWl0Q29uZmlnGAUgASgIIgsKCUxvUmFSZXNldCIbCgdM",
            "b1JhQWNrEhAKCERldmljZUlkGAEgASgNIksKC0R1bW15Q29uZmlnEg8KB1R4",
            "UG93ZXIYASABKAUSFQoNVHhSeEJhbmR3aWR0aBgCIAEoDRIUCgxUeFJ4RGF0",
            "YVJhdGUYAyABKA0i8wgKC0xvUmFNZXNzYWdlEhMKC0lzTXVsdGljYXN0GAEg",
            "ASgIEhAKCERldmljZUlkGAIgASgNEhcKD0NvcnJlbGF0aW9uQ29kZRgDIAEo",
            "DRIPCgdQYXlsb2FkGAQgASgMEj0KGGZvcndhcmRFeHBlcmltZW50Q29tbWFu",
            "ZBgFIAEoCzIZLkZvcndhcmRFeHBlcmltZW50Q29tbWFuZEgAEjEKEmV4cGVy",
            "aW1lbnRSZXNwb25zZRgGIAEoCzITLkV4cGVyaW1lbnRSZXNwb25zZUgAEj0K",
            "GG1lYXN1cmVtZW50U3RyZWFtUmVxdWVzdBgHIAEoCzIZLk1lYXN1cmVtZW50",
            "U3RyZWFtUmVxdWVzdEgAEj8KGW1lYXN1cmVtZW50U3RyZWFtRnJhZ21lbnQY",
            "CCABKAsyGi5NZWFzdXJlbWVudFN0cmVhbUZyYWdtZW50SAASQwobcmxuY1Jl",
            "bW90ZUZsYXNoU3RhcnRDb21tYW5kGAkgASgLMhwuUmxuY1JlbW90ZUZsYXNo",
            "U3RhcnRDb21tYW5kSAASQQoacmxuY1JlbW90ZUZsYXNoU3RvcENvbW1hbmQY",
            "CiABKAsyGy5SbG5jUmVtb3RlRmxhc2hTdG9wQ29tbWFuZEgAEkEKG3JsbmNR",
            "dWVyeVJlbW90ZUZsYXNoQ29tbWFuZBgLIAEoCzIaLlJsbmNRdWVyeVJlbW90",
            "ZUZsYXNoU3RhdGVIABI7ChdybG5jUmVtb3RlRmxhc2hSZXNwb25zZRgMIAEo",
            "CzIYLlJsbmNSZW1vdGVGbGFzaFJlc3BvbnNlSAASNwoVcmxuY0luaXRDb25m",
            "aWdDb21tYW5kGA0gASgLMhYuUmxuY0luaXRDb25maWdDb21tYW5kSAASMwoT",
            "cmxuY0VuY29kZWRGcmFnbWVudBgOIAEoCzIULlJsbmNFbmNvZGVkRnJhZ21l",
            "bnRIABIrCg9ybG5jU3RhdGVVcGRhdGUYDyABKAsyEC5SbG5jU3RhdGVVcGRh",
            "dGVIABI5ChZybG5jVGVybWluYXRpb25Db21tYW5kGBAgASgLMhcuUmxuY1Rl",
            "cm1pbmF0aW9uQ29tbWFuZEgAEikKDmRlY29kaW5nUmVzdWx0GBEgASgLMg8u",
            "RGVjb2RpbmdSZXN1bHRIABIpCg5kZWNvZGluZ1VwZGF0ZRgSIAEoCzIPLkRl",
            "Y29kaW5nVXBkYXRlSAASMwoTZGV2aWNlQ29uZmlndXJhdGlvbhgTIAEoCzIU",
            "LkRldmljZUNvbmZpZ3VyYXRpb25IABIrCg9yZXF1ZXN0Qm9vdEluZm8YFCAB",
            "KAsyEC5SZXF1ZXN0Qm9vdEluZm9IABIjCgtib290TWVzc2FnZRgVIAEoCzIM",
            "LkJvb3RNZXNzYWdlSAASIAoKcmVzZXRSYWRpbxgWIAEoCzIKLkxvUmFSZXNl",
            "dEgAEhcKA2FjaxgXIAEoCzIILkxvUmFBY2tIABIjCgtkdW1teUNvbmZpZxgY",
            "IAEoCzIMLkR1bW15Q29uZmlnSABCBgoEQm9keUIHqgIETG9SYWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::LoRa.ExperimentConfigReflection.Descriptor, global::LoRa.FirmwareReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LoRa.RequestBootInfo), global::LoRa.RequestBootInfo.Parser, new[]{ "Request" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LoRa.DeviceConfiguration), global::LoRa.DeviceConfiguration.Parser, new[]{ "SequenceConfiguration", "EnableSequenceTransmit", "AckRequired", "TransmitConfiguration", "ApplyTransmitConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LoRa.LoRaReset), global::LoRa.LoRaReset.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LoRa.LoRaAck), global::LoRa.LoRaAck.Parser, new[]{ "DeviceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LoRa.DummyConfig), global::LoRa.DummyConfig.Parser, new[]{ "TxPower", "TxRxBandwidth", "TxRxDataRate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LoRa.LoRaMessage), global::LoRa.LoRaMessage.Parser, new[]{ "IsMulticast", "DeviceId", "CorrelationCode", "Payload", "ForwardExperimentCommand", "ExperimentResponse", "MeasurementStreamRequest", "MeasurementStreamFragment", "RlncRemoteFlashStartCommand", "RlncRemoteFlashStopCommand", "RlncQueryRemoteFlashCommand", "RlncRemoteFlashResponse", "RlncInitConfigCommand", "RlncEncodedFragment", "RlncStateUpdate", "RlncTerminationCommand", "DecodingResult", "DecodingUpdate", "DeviceConfiguration", "RequestBootInfo", "BootMessage", "ResetRadio", "Ack", "DummyConfig" }, new[]{ "Body" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Shared with uart_control
  /// </summary>
  public sealed partial class RequestBootInfo : pb::IMessage<RequestBootInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RequestBootInfo> _parser = new pb::MessageParser<RequestBootInfo>(() => new RequestBootInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RequestBootInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LoRa.LoraDeviceMessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestBootInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestBootInfo(RequestBootInfo other) : this() {
      request_ = other.request_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestBootInfo Clone() {
      return new RequestBootInfo(this);
    }

    /// <summary>Field number for the "Request" field.</summary>
    public const int RequestFieldNumber = 1;
    private bool request_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RequestBootInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RequestBootInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Request != other.Request) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Request != false) hash ^= Request.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Request != false) {
        output.WriteRawTag(8);
        output.WriteBool(Request);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Request != false) {
        output.WriteRawTag(8);
        output.WriteBool(Request);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Request != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RequestBootInfo other) {
      if (other == null) {
        return;
      }
      if (other.Request != false) {
        Request = other.Request;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Request = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Request = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Shared with uart_control
  /// </summary>
  public sealed partial class DeviceConfiguration : pb::IMessage<DeviceConfiguration>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceConfiguration> _parser = new pb::MessageParser<DeviceConfiguration>(() => new DeviceConfiguration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeviceConfiguration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LoRa.LoraDeviceMessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceConfiguration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceConfiguration(DeviceConfiguration other) : this() {
      sequenceConfiguration_ = other.sequenceConfiguration_ != null ? other.sequenceConfiguration_.Clone() : null;
      enableSequenceTransmit_ = other.enableSequenceTransmit_;
      ackRequired_ = other.ackRequired_;
      transmitConfiguration_ = other.transmitConfiguration_ != null ? other.transmitConfiguration_.Clone() : null;
      applyTransmitConfig_ = other.applyTransmitConfig_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceConfiguration Clone() {
      return new DeviceConfiguration(this);
    }

    /// <summary>Field number for the "sequenceConfiguration" field.</summary>
    public const int SequenceConfigurationFieldNumber = 1;
    private global::LoRa.SequenceConfiguration sequenceConfiguration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.SequenceConfiguration SequenceConfiguration {
      get { return sequenceConfiguration_; }
      set {
        sequenceConfiguration_ = value;
      }
    }

    /// <summary>Field number for the "enableSequenceTransmit" field.</summary>
    public const int EnableSequenceTransmitFieldNumber = 2;
    private bool enableSequenceTransmit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableSequenceTransmit {
      get { return enableSequenceTransmit_; }
      set {
        enableSequenceTransmit_ = value;
      }
    }

    /// <summary>Field number for the "ackRequired" field.</summary>
    public const int AckRequiredFieldNumber = 3;
    private bool ackRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AckRequired {
      get { return ackRequired_; }
      set {
        ackRequired_ = value;
      }
    }

    /// <summary>Field number for the "transmitConfiguration" field.</summary>
    public const int TransmitConfigurationFieldNumber = 4;
    private global::LoRa.TransmitReceiveConfiguration transmitConfiguration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.TransmitReceiveConfiguration TransmitConfiguration {
      get { return transmitConfiguration_; }
      set {
        transmitConfiguration_ = value;
      }
    }

    /// <summary>Field number for the "applyTransmitConfig" field.</summary>
    public const int ApplyTransmitConfigFieldNumber = 5;
    private bool applyTransmitConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ApplyTransmitConfig {
      get { return applyTransmitConfig_; }
      set {
        applyTransmitConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeviceConfiguration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeviceConfiguration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SequenceConfiguration, other.SequenceConfiguration)) return false;
      if (EnableSequenceTransmit != other.EnableSequenceTransmit) return false;
      if (AckRequired != other.AckRequired) return false;
      if (!object.Equals(TransmitConfiguration, other.TransmitConfiguration)) return false;
      if (ApplyTransmitConfig != other.ApplyTransmitConfig) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (sequenceConfiguration_ != null) hash ^= SequenceConfiguration.GetHashCode();
      if (EnableSequenceTransmit != false) hash ^= EnableSequenceTransmit.GetHashCode();
      if (AckRequired != false) hash ^= AckRequired.GetHashCode();
      if (transmitConfiguration_ != null) hash ^= TransmitConfiguration.GetHashCode();
      if (ApplyTransmitConfig != false) hash ^= ApplyTransmitConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sequenceConfiguration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SequenceConfiguration);
      }
      if (EnableSequenceTransmit != false) {
        output.WriteRawTag(16);
        output.WriteBool(EnableSequenceTransmit);
      }
      if (AckRequired != false) {
        output.WriteRawTag(24);
        output.WriteBool(AckRequired);
      }
      if (transmitConfiguration_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TransmitConfiguration);
      }
      if (ApplyTransmitConfig != false) {
        output.WriteRawTag(40);
        output.WriteBool(ApplyTransmitConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sequenceConfiguration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SequenceConfiguration);
      }
      if (EnableSequenceTransmit != false) {
        output.WriteRawTag(16);
        output.WriteBool(EnableSequenceTransmit);
      }
      if (AckRequired != false) {
        output.WriteRawTag(24);
        output.WriteBool(AckRequired);
      }
      if (transmitConfiguration_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TransmitConfiguration);
      }
      if (ApplyTransmitConfig != false) {
        output.WriteRawTag(40);
        output.WriteBool(ApplyTransmitConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (sequenceConfiguration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SequenceConfiguration);
      }
      if (EnableSequenceTransmit != false) {
        size += 1 + 1;
      }
      if (AckRequired != false) {
        size += 1 + 1;
      }
      if (transmitConfiguration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransmitConfiguration);
      }
      if (ApplyTransmitConfig != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeviceConfiguration other) {
      if (other == null) {
        return;
      }
      if (other.sequenceConfiguration_ != null) {
        if (sequenceConfiguration_ == null) {
          SequenceConfiguration = new global::LoRa.SequenceConfiguration();
        }
        SequenceConfiguration.MergeFrom(other.SequenceConfiguration);
      }
      if (other.EnableSequenceTransmit != false) {
        EnableSequenceTransmit = other.EnableSequenceTransmit;
      }
      if (other.AckRequired != false) {
        AckRequired = other.AckRequired;
      }
      if (other.transmitConfiguration_ != null) {
        if (transmitConfiguration_ == null) {
          TransmitConfiguration = new global::LoRa.TransmitReceiveConfiguration();
        }
        TransmitConfiguration.MergeFrom(other.TransmitConfiguration);
      }
      if (other.ApplyTransmitConfig != false) {
        ApplyTransmitConfig = other.ApplyTransmitConfig;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (sequenceConfiguration_ == null) {
              SequenceConfiguration = new global::LoRa.SequenceConfiguration();
            }
            input.ReadMessage(SequenceConfiguration);
            break;
          }
          case 16: {
            EnableSequenceTransmit = input.ReadBool();
            break;
          }
          case 24: {
            AckRequired = input.ReadBool();
            break;
          }
          case 34: {
            if (transmitConfiguration_ == null) {
              TransmitConfiguration = new global::LoRa.TransmitReceiveConfiguration();
            }
            input.ReadMessage(TransmitConfiguration);
            break;
          }
          case 40: {
            ApplyTransmitConfig = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (sequenceConfiguration_ == null) {
              SequenceConfiguration = new global::LoRa.SequenceConfiguration();
            }
            input.ReadMessage(SequenceConfiguration);
            break;
          }
          case 16: {
            EnableSequenceTransmit = input.ReadBool();
            break;
          }
          case 24: {
            AckRequired = input.ReadBool();
            break;
          }
          case 34: {
            if (transmitConfiguration_ == null) {
              TransmitConfiguration = new global::LoRa.TransmitReceiveConfiguration();
            }
            input.ReadMessage(TransmitConfiguration);
            break;
          }
          case 40: {
            ApplyTransmitConfig = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LoRaReset : pb::IMessage<LoRaReset>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoRaReset> _parser = new pb::MessageParser<LoRaReset>(() => new LoRaReset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LoRaReset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LoRa.LoraDeviceMessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoRaReset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoRaReset(LoRaReset other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoRaReset Clone() {
      return new LoRaReset(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LoRaReset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LoRaReset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LoRaReset other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class LoRaAck : pb::IMessage<LoRaAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoRaAck> _parser = new pb::MessageParser<LoRaAck>(() => new LoRaAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LoRaAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LoRa.LoraDeviceMessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoRaAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoRaAck(LoRaAck other) : this() {
      deviceId_ = other.deviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoRaAck Clone() {
      return new LoRaAck(this);
    }

    /// <summary>Field number for the "DeviceId" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private uint deviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LoRaAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LoRaAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId != 0) hash ^= DeviceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeviceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LoRaAck other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId != 0) {
        DeviceId = other.DeviceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeviceId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DeviceId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DummyConfig : pb::IMessage<DummyConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DummyConfig> _parser = new pb::MessageParser<DummyConfig>(() => new DummyConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DummyConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LoRa.LoraDeviceMessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DummyConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DummyConfig(DummyConfig other) : this() {
      txPower_ = other.txPower_;
      txRxBandwidth_ = other.txRxBandwidth_;
      txRxDataRate_ = other.txRxDataRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DummyConfig Clone() {
      return new DummyConfig(this);
    }

    /// <summary>Field number for the "TxPower" field.</summary>
    public const int TxPowerFieldNumber = 1;
    private int txPower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TxPower {
      get { return txPower_; }
      set {
        txPower_ = value;
      }
    }

    /// <summary>Field number for the "TxRxBandwidth" field.</summary>
    public const int TxRxBandwidthFieldNumber = 2;
    private uint txRxBandwidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TxRxBandwidth {
      get { return txRxBandwidth_; }
      set {
        txRxBandwidth_ = value;
      }
    }

    /// <summary>Field number for the "TxRxDataRate" field.</summary>
    public const int TxRxDataRateFieldNumber = 3;
    private uint txRxDataRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TxRxDataRate {
      get { return txRxDataRate_; }
      set {
        txRxDataRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DummyConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DummyConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TxPower != other.TxPower) return false;
      if (TxRxBandwidth != other.TxRxBandwidth) return false;
      if (TxRxDataRate != other.TxRxDataRate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TxPower != 0) hash ^= TxPower.GetHashCode();
      if (TxRxBandwidth != 0) hash ^= TxRxBandwidth.GetHashCode();
      if (TxRxDataRate != 0) hash ^= TxRxDataRate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TxPower != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TxPower);
      }
      if (TxRxBandwidth != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TxRxBandwidth);
      }
      if (TxRxDataRate != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(TxRxDataRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TxPower != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TxPower);
      }
      if (TxRxBandwidth != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TxRxBandwidth);
      }
      if (TxRxDataRate != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(TxRxDataRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TxPower != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TxPower);
      }
      if (TxRxBandwidth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TxRxBandwidth);
      }
      if (TxRxDataRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TxRxDataRate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DummyConfig other) {
      if (other == null) {
        return;
      }
      if (other.TxPower != 0) {
        TxPower = other.TxPower;
      }
      if (other.TxRxBandwidth != 0) {
        TxRxBandwidth = other.TxRxBandwidth;
      }
      if (other.TxRxDataRate != 0) {
        TxRxDataRate = other.TxRxDataRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TxPower = input.ReadInt32();
            break;
          }
          case 16: {
            TxRxBandwidth = input.ReadUInt32();
            break;
          }
          case 24: {
            TxRxDataRate = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TxPower = input.ReadInt32();
            break;
          }
          case 16: {
            TxRxBandwidth = input.ReadUInt32();
            break;
          }
          case 24: {
            TxRxDataRate = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LoRaMessage : pb::IMessage<LoRaMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoRaMessage> _parser = new pb::MessageParser<LoRaMessage>(() => new LoRaMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LoRaMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LoRa.LoraDeviceMessagesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoRaMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoRaMessage(LoRaMessage other) : this() {
      isMulticast_ = other.isMulticast_;
      deviceId_ = other.deviceId_;
      correlationCode_ = other.correlationCode_;
      payload_ = other.payload_;
      switch (other.BodyCase) {
        case BodyOneofCase.ForwardExperimentCommand:
          ForwardExperimentCommand = other.ForwardExperimentCommand.Clone();
          break;
        case BodyOneofCase.ExperimentResponse:
          ExperimentResponse = other.ExperimentResponse.Clone();
          break;
        case BodyOneofCase.MeasurementStreamRequest:
          MeasurementStreamRequest = other.MeasurementStreamRequest.Clone();
          break;
        case BodyOneofCase.MeasurementStreamFragment:
          MeasurementStreamFragment = other.MeasurementStreamFragment.Clone();
          break;
        case BodyOneofCase.RlncRemoteFlashStartCommand:
          RlncRemoteFlashStartCommand = other.RlncRemoteFlashStartCommand.Clone();
          break;
        case BodyOneofCase.RlncRemoteFlashStopCommand:
          RlncRemoteFlashStopCommand = other.RlncRemoteFlashStopCommand.Clone();
          break;
        case BodyOneofCase.RlncQueryRemoteFlashCommand:
          RlncQueryRemoteFlashCommand = other.RlncQueryRemoteFlashCommand.Clone();
          break;
        case BodyOneofCase.RlncRemoteFlashResponse:
          RlncRemoteFlashResponse = other.RlncRemoteFlashResponse.Clone();
          break;
        case BodyOneofCase.RlncInitConfigCommand:
          RlncInitConfigCommand = other.RlncInitConfigCommand.Clone();
          break;
        case BodyOneofCase.RlncEncodedFragment:
          RlncEncodedFragment = other.RlncEncodedFragment.Clone();
          break;
        case BodyOneofCase.RlncStateUpdate:
          RlncStateUpdate = other.RlncStateUpdate.Clone();
          break;
        case BodyOneofCase.RlncTerminationCommand:
          RlncTerminationCommand = other.RlncTerminationCommand.Clone();
          break;
        case BodyOneofCase.DecodingResult:
          DecodingResult = other.DecodingResult.Clone();
          break;
        case BodyOneofCase.DecodingUpdate:
          DecodingUpdate = other.DecodingUpdate.Clone();
          break;
        case BodyOneofCase.DeviceConfiguration:
          DeviceConfiguration = other.DeviceConfiguration.Clone();
          break;
        case BodyOneofCase.RequestBootInfo:
          RequestBootInfo = other.RequestBootInfo.Clone();
          break;
        case BodyOneofCase.BootMessage:
          BootMessage = other.BootMessage.Clone();
          break;
        case BodyOneofCase.ResetRadio:
          ResetRadio = other.ResetRadio.Clone();
          break;
        case BodyOneofCase.Ack:
          Ack = other.Ack.Clone();
          break;
        case BodyOneofCase.DummyConfig:
          DummyConfig = other.DummyConfig.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoRaMessage Clone() {
      return new LoRaMessage(this);
    }

    /// <summary>Field number for the "IsMulticast" field.</summary>
    public const int IsMulticastFieldNumber = 1;
    private bool isMulticast_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsMulticast {
      get { return isMulticast_; }
      set {
        isMulticast_ = value;
      }
    }

    /// <summary>Field number for the "DeviceId" field.</summary>
    public const int DeviceIdFieldNumber = 2;
    private uint deviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = value;
      }
    }

    /// <summary>Field number for the "CorrelationCode" field.</summary>
    public const int CorrelationCodeFieldNumber = 3;
    private uint correlationCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CorrelationCode {
      get { return correlationCode_; }
      set {
        correlationCode_ = value;
      }
    }

    /// <summary>Field number for the "Payload" field.</summary>
    public const int PayloadFieldNumber = 4;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "forwardExperimentCommand" field.</summary>
    public const int ForwardExperimentCommandFieldNumber = 5;
    /// <summary>
    /// Set role TX/RX, play/pause or switch to predefined experiment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.ForwardExperimentCommand ForwardExperimentCommand {
      get { return bodyCase_ == BodyOneofCase.ForwardExperimentCommand ? (global::LoRa.ForwardExperimentCommand) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.ForwardExperimentCommand;
      }
    }

    /// <summary>Field number for the "experimentResponse" field.</summary>
    public const int ExperimentResponseFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.ExperimentResponse ExperimentResponse {
      get { return bodyCase_ == BodyOneofCase.ExperimentResponse ? (global::LoRa.ExperimentResponse) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.ExperimentResponse;
      }
    }

    /// <summary>Field number for the "measurementStreamRequest" field.</summary>
    public const int MeasurementStreamRequestFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.MeasurementStreamRequest MeasurementStreamRequest {
      get { return bodyCase_ == BodyOneofCase.MeasurementStreamRequest ? (global::LoRa.MeasurementStreamRequest) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.MeasurementStreamRequest;
      }
    }

    /// <summary>Field number for the "measurementStreamFragment" field.</summary>
    public const int MeasurementStreamFragmentFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.MeasurementStreamFragment MeasurementStreamFragment {
      get { return bodyCase_ == BodyOneofCase.MeasurementStreamFragment ? (global::LoRa.MeasurementStreamFragment) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.MeasurementStreamFragment;
      }
    }

    /// <summary>Field number for the "rlncRemoteFlashStartCommand" field.</summary>
    public const int RlncRemoteFlashStartCommandFieldNumber = 9;
    /// <summary>
    /// RLNC Remote command - control plane
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.RlncRemoteFlashStartCommand RlncRemoteFlashStartCommand {
      get { return bodyCase_ == BodyOneofCase.RlncRemoteFlashStartCommand ? (global::LoRa.RlncRemoteFlashStartCommand) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.RlncRemoteFlashStartCommand;
      }
    }

    /// <summary>Field number for the "rlncRemoteFlashStopCommand" field.</summary>
    public const int RlncRemoteFlashStopCommandFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.RlncRemoteFlashStopCommand RlncRemoteFlashStopCommand {
      get { return bodyCase_ == BodyOneofCase.RlncRemoteFlashStopCommand ? (global::LoRa.RlncRemoteFlashStopCommand) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.RlncRemoteFlashStopCommand;
      }
    }

    /// <summary>Field number for the "rlncQueryRemoteFlashCommand" field.</summary>
    public const int RlncQueryRemoteFlashCommandFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.RlncQueryRemoteFlashState RlncQueryRemoteFlashCommand {
      get { return bodyCase_ == BodyOneofCase.RlncQueryRemoteFlashCommand ? (global::LoRa.RlncQueryRemoteFlashState) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.RlncQueryRemoteFlashCommand;
      }
    }

    /// <summary>Field number for the "rlncRemoteFlashResponse" field.</summary>
    public const int RlncRemoteFlashResponseFieldNumber = 12;
    /// <summary>
    /// RLNC Remote command response
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.RlncRemoteFlashResponse RlncRemoteFlashResponse {
      get { return bodyCase_ == BodyOneofCase.RlncRemoteFlashResponse ? (global::LoRa.RlncRemoteFlashResponse) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.RlncRemoteFlashResponse;
      }
    }

    /// <summary>Field number for the "rlncInitConfigCommand" field.</summary>
    public const int RlncInitConfigCommandFieldNumber = 13;
    /// <summary>
    /// Actual RLNC commands
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.RlncInitConfigCommand RlncInitConfigCommand {
      get { return bodyCase_ == BodyOneofCase.RlncInitConfigCommand ? (global::LoRa.RlncInitConfigCommand) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.RlncInitConfigCommand;
      }
    }

    /// <summary>Field number for the "rlncEncodedFragment" field.</summary>
    public const int RlncEncodedFragmentFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.RlncEncodedFragment RlncEncodedFragment {
      get { return bodyCase_ == BodyOneofCase.RlncEncodedFragment ? (global::LoRa.RlncEncodedFragment) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.RlncEncodedFragment;
      }
    }

    /// <summary>Field number for the "rlncStateUpdate" field.</summary>
    public const int RlncStateUpdateFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.RlncStateUpdate RlncStateUpdate {
      get { return bodyCase_ == BodyOneofCase.RlncStateUpdate ? (global::LoRa.RlncStateUpdate) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.RlncStateUpdate;
      }
    }

    /// <summary>Field number for the "rlncTerminationCommand" field.</summary>
    public const int RlncTerminationCommandFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.RlncTerminationCommand RlncTerminationCommand {
      get { return bodyCase_ == BodyOneofCase.RlncTerminationCommand ? (global::LoRa.RlncTerminationCommand) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.RlncTerminationCommand;
      }
    }

    /// <summary>Field number for the "decodingResult" field.</summary>
    public const int DecodingResultFieldNumber = 17;
    /// <summary>
    /// UC ACK
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.DecodingResult DecodingResult {
      get { return bodyCase_ == BodyOneofCase.DecodingResult ? (global::LoRa.DecodingResult) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.DecodingResult;
      }
    }

    /// <summary>Field number for the "decodingUpdate" field.</summary>
    public const int DecodingUpdateFieldNumber = 18;
    /// <summary>
    /// UC ACK
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.DecodingUpdate DecodingUpdate {
      get { return bodyCase_ == BodyOneofCase.DecodingUpdate ? (global::LoRa.DecodingUpdate) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.DecodingUpdate;
      }
    }

    /// <summary>Field number for the "deviceConfiguration" field.</summary>
    public const int DeviceConfigurationFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.DeviceConfiguration DeviceConfiguration {
      get { return bodyCase_ == BodyOneofCase.DeviceConfiguration ? (global::LoRa.DeviceConfiguration) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.DeviceConfiguration;
      }
    }

    /// <summary>Field number for the "requestBootInfo" field.</summary>
    public const int RequestBootInfoFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.RequestBootInfo RequestBootInfo {
      get { return bodyCase_ == BodyOneofCase.RequestBootInfo ? (global::LoRa.RequestBootInfo) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.RequestBootInfo;
      }
    }

    /// <summary>Field number for the "bootMessage" field.</summary>
    public const int BootMessageFieldNumber = 21;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.BootMessage BootMessage {
      get { return bodyCase_ == BodyOneofCase.BootMessage ? (global::LoRa.BootMessage) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.BootMessage;
      }
    }

    /// <summary>Field number for the "resetRadio" field.</summary>
    public const int ResetRadioFieldNumber = 22;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.LoRaReset ResetRadio {
      get { return bodyCase_ == BodyOneofCase.ResetRadio ? (global::LoRa.LoRaReset) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.ResetRadio;
      }
    }

    /// <summary>Field number for the "ack" field.</summary>
    public const int AckFieldNumber = 23;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.LoRaAck Ack {
      get { return bodyCase_ == BodyOneofCase.Ack ? (global::LoRa.LoRaAck) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.Ack;
      }
    }

    /// <summary>Field number for the "dummyConfig" field.</summary>
    public const int DummyConfigFieldNumber = 24;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.DummyConfig DummyConfig {
      get { return bodyCase_ == BodyOneofCase.DummyConfig ? (global::LoRa.DummyConfig) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.DummyConfig;
      }
    }

    private object body_;
    /// <summary>Enum of possible cases for the "Body" oneof.</summary>
    public enum BodyOneofCase {
      None = 0,
      ForwardExperimentCommand = 5,
      ExperimentResponse = 6,
      MeasurementStreamRequest = 7,
      MeasurementStreamFragment = 8,
      RlncRemoteFlashStartCommand = 9,
      RlncRemoteFlashStopCommand = 10,
      RlncQueryRemoteFlashCommand = 11,
      RlncRemoteFlashResponse = 12,
      RlncInitConfigCommand = 13,
      RlncEncodedFragment = 14,
      RlncStateUpdate = 15,
      RlncTerminationCommand = 16,
      DecodingResult = 17,
      DecodingUpdate = 18,
      DeviceConfiguration = 19,
      RequestBootInfo = 20,
      BootMessage = 21,
      ResetRadio = 22,
      Ack = 23,
      DummyConfig = 24,
    }
    private BodyOneofCase bodyCase_ = BodyOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BodyOneofCase BodyCase {
      get { return bodyCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBody() {
      bodyCase_ = BodyOneofCase.None;
      body_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LoRaMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LoRaMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsMulticast != other.IsMulticast) return false;
      if (DeviceId != other.DeviceId) return false;
      if (CorrelationCode != other.CorrelationCode) return false;
      if (Payload != other.Payload) return false;
      if (!object.Equals(ForwardExperimentCommand, other.ForwardExperimentCommand)) return false;
      if (!object.Equals(ExperimentResponse, other.ExperimentResponse)) return false;
      if (!object.Equals(MeasurementStreamRequest, other.MeasurementStreamRequest)) return false;
      if (!object.Equals(MeasurementStreamFragment, other.MeasurementStreamFragment)) return false;
      if (!object.Equals(RlncRemoteFlashStartCommand, other.RlncRemoteFlashStartCommand)) return false;
      if (!object.Equals(RlncRemoteFlashStopCommand, other.RlncRemoteFlashStopCommand)) return false;
      if (!object.Equals(RlncQueryRemoteFlashCommand, other.RlncQueryRemoteFlashCommand)) return false;
      if (!object.Equals(RlncRemoteFlashResponse, other.RlncRemoteFlashResponse)) return false;
      if (!object.Equals(RlncInitConfigCommand, other.RlncInitConfigCommand)) return false;
      if (!object.Equals(RlncEncodedFragment, other.RlncEncodedFragment)) return false;
      if (!object.Equals(RlncStateUpdate, other.RlncStateUpdate)) return false;
      if (!object.Equals(RlncTerminationCommand, other.RlncTerminationCommand)) return false;
      if (!object.Equals(DecodingResult, other.DecodingResult)) return false;
      if (!object.Equals(DecodingUpdate, other.DecodingUpdate)) return false;
      if (!object.Equals(DeviceConfiguration, other.DeviceConfiguration)) return false;
      if (!object.Equals(RequestBootInfo, other.RequestBootInfo)) return false;
      if (!object.Equals(BootMessage, other.BootMessage)) return false;
      if (!object.Equals(ResetRadio, other.ResetRadio)) return false;
      if (!object.Equals(Ack, other.Ack)) return false;
      if (!object.Equals(DummyConfig, other.DummyConfig)) return false;
      if (BodyCase != other.BodyCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IsMulticast != false) hash ^= IsMulticast.GetHashCode();
      if (DeviceId != 0) hash ^= DeviceId.GetHashCode();
      if (CorrelationCode != 0) hash ^= CorrelationCode.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (bodyCase_ == BodyOneofCase.ForwardExperimentCommand) hash ^= ForwardExperimentCommand.GetHashCode();
      if (bodyCase_ == BodyOneofCase.ExperimentResponse) hash ^= ExperimentResponse.GetHashCode();
      if (bodyCase_ == BodyOneofCase.MeasurementStreamRequest) hash ^= MeasurementStreamRequest.GetHashCode();
      if (bodyCase_ == BodyOneofCase.MeasurementStreamFragment) hash ^= MeasurementStreamFragment.GetHashCode();
      if (bodyCase_ == BodyOneofCase.RlncRemoteFlashStartCommand) hash ^= RlncRemoteFlashStartCommand.GetHashCode();
      if (bodyCase_ == BodyOneofCase.RlncRemoteFlashStopCommand) hash ^= RlncRemoteFlashStopCommand.GetHashCode();
      if (bodyCase_ == BodyOneofCase.RlncQueryRemoteFlashCommand) hash ^= RlncQueryRemoteFlashCommand.GetHashCode();
      if (bodyCase_ == BodyOneofCase.RlncRemoteFlashResponse) hash ^= RlncRemoteFlashResponse.GetHashCode();
      if (bodyCase_ == BodyOneofCase.RlncInitConfigCommand) hash ^= RlncInitConfigCommand.GetHashCode();
      if (bodyCase_ == BodyOneofCase.RlncEncodedFragment) hash ^= RlncEncodedFragment.GetHashCode();
      if (bodyCase_ == BodyOneofCase.RlncStateUpdate) hash ^= RlncStateUpdate.GetHashCode();
      if (bodyCase_ == BodyOneofCase.RlncTerminationCommand) hash ^= RlncTerminationCommand.GetHashCode();
      if (bodyCase_ == BodyOneofCase.DecodingResult) hash ^= DecodingResult.GetHashCode();
      if (bodyCase_ == BodyOneofCase.DecodingUpdate) hash ^= DecodingUpdate.GetHashCode();
      if (bodyCase_ == BodyOneofCase.DeviceConfiguration) hash ^= DeviceConfiguration.GetHashCode();
      if (bodyCase_ == BodyOneofCase.RequestBootInfo) hash ^= RequestBootInfo.GetHashCode();
      if (bodyCase_ == BodyOneofCase.BootMessage) hash ^= BootMessage.GetHashCode();
      if (bodyCase_ == BodyOneofCase.ResetRadio) hash ^= ResetRadio.GetHashCode();
      if (bodyCase_ == BodyOneofCase.Ack) hash ^= Ack.GetHashCode();
      if (bodyCase_ == BodyOneofCase.DummyConfig) hash ^= DummyConfig.GetHashCode();
      hash ^= (int) bodyCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsMulticast != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsMulticast);
      }
      if (DeviceId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(DeviceId);
      }
      if (CorrelationCode != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(CorrelationCode);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Payload);
      }
      if (bodyCase_ == BodyOneofCase.ForwardExperimentCommand) {
        output.WriteRawTag(42);
        output.WriteMessage(ForwardExperimentCommand);
      }
      if (bodyCase_ == BodyOneofCase.ExperimentResponse) {
        output.WriteRawTag(50);
        output.WriteMessage(ExperimentResponse);
      }
      if (bodyCase_ == BodyOneofCase.MeasurementStreamRequest) {
        output.WriteRawTag(58);
        output.WriteMessage(MeasurementStreamRequest);
      }
      if (bodyCase_ == BodyOneofCase.MeasurementStreamFragment) {
        output.WriteRawTag(66);
        output.WriteMessage(MeasurementStreamFragment);
      }
      if (bodyCase_ == BodyOneofCase.RlncRemoteFlashStartCommand) {
        output.WriteRawTag(74);
        output.WriteMessage(RlncRemoteFlashStartCommand);
      }
      if (bodyCase_ == BodyOneofCase.RlncRemoteFlashStopCommand) {
        output.WriteRawTag(82);
        output.WriteMessage(RlncRemoteFlashStopCommand);
      }
      if (bodyCase_ == BodyOneofCase.RlncQueryRemoteFlashCommand) {
        output.WriteRawTag(90);
        output.WriteMessage(RlncQueryRemoteFlashCommand);
      }
      if (bodyCase_ == BodyOneofCase.RlncRemoteFlashResponse) {
        output.WriteRawTag(98);
        output.WriteMessage(RlncRemoteFlashResponse);
      }
      if (bodyCase_ == BodyOneofCase.RlncInitConfigCommand) {
        output.WriteRawTag(106);
        output.WriteMessage(RlncInitConfigCommand);
      }
      if (bodyCase_ == BodyOneofCase.RlncEncodedFragment) {
        output.WriteRawTag(114);
        output.WriteMessage(RlncEncodedFragment);
      }
      if (bodyCase_ == BodyOneofCase.RlncStateUpdate) {
        output.WriteRawTag(122);
        output.WriteMessage(RlncStateUpdate);
      }
      if (bodyCase_ == BodyOneofCase.RlncTerminationCommand) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(RlncTerminationCommand);
      }
      if (bodyCase_ == BodyOneofCase.DecodingResult) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(DecodingResult);
      }
      if (bodyCase_ == BodyOneofCase.DecodingUpdate) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(DecodingUpdate);
      }
      if (bodyCase_ == BodyOneofCase.DeviceConfiguration) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(DeviceConfiguration);
      }
      if (bodyCase_ == BodyOneofCase.RequestBootInfo) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(RequestBootInfo);
      }
      if (bodyCase_ == BodyOneofCase.BootMessage) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(BootMessage);
      }
      if (bodyCase_ == BodyOneofCase.ResetRadio) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(ResetRadio);
      }
      if (bodyCase_ == BodyOneofCase.Ack) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(Ack);
      }
      if (bodyCase_ == BodyOneofCase.DummyConfig) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(DummyConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsMulticast != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsMulticast);
      }
      if (DeviceId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(DeviceId);
      }
      if (CorrelationCode != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(CorrelationCode);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Payload);
      }
      if (bodyCase_ == BodyOneofCase.ForwardExperimentCommand) {
        output.WriteRawTag(42);
        output.WriteMessage(ForwardExperimentCommand);
      }
      if (bodyCase_ == BodyOneofCase.ExperimentResponse) {
        output.WriteRawTag(50);
        output.WriteMessage(ExperimentResponse);
      }
      if (bodyCase_ == BodyOneofCase.MeasurementStreamRequest) {
        output.WriteRawTag(58);
        output.WriteMessage(MeasurementStreamRequest);
      }
      if (bodyCase_ == BodyOneofCase.MeasurementStreamFragment) {
        output.WriteRawTag(66);
        output.WriteMessage(MeasurementStreamFragment);
      }
      if (bodyCase_ == BodyOneofCase.RlncRemoteFlashStartCommand) {
        output.WriteRawTag(74);
        output.WriteMessage(RlncRemoteFlashStartCommand);
      }
      if (bodyCase_ == BodyOneofCase.RlncRemoteFlashStopCommand) {
        output.WriteRawTag(82);
        output.WriteMessage(RlncRemoteFlashStopCommand);
      }
      if (bodyCase_ == BodyOneofCase.RlncQueryRemoteFlashCommand) {
        output.WriteRawTag(90);
        output.WriteMessage(RlncQueryRemoteFlashCommand);
      }
      if (bodyCase_ == BodyOneofCase.RlncRemoteFlashResponse) {
        output.WriteRawTag(98);
        output.WriteMessage(RlncRemoteFlashResponse);
      }
      if (bodyCase_ == BodyOneofCase.RlncInitConfigCommand) {
        output.WriteRawTag(106);
        output.WriteMessage(RlncInitConfigCommand);
      }
      if (bodyCase_ == BodyOneofCase.RlncEncodedFragment) {
        output.WriteRawTag(114);
        output.WriteMessage(RlncEncodedFragment);
      }
      if (bodyCase_ == BodyOneofCase.RlncStateUpdate) {
        output.WriteRawTag(122);
        output.WriteMessage(RlncStateUpdate);
      }
      if (bodyCase_ == BodyOneofCase.RlncTerminationCommand) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(RlncTerminationCommand);
      }
      if (bodyCase_ == BodyOneofCase.DecodingResult) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(DecodingResult);
      }
      if (bodyCase_ == BodyOneofCase.DecodingUpdate) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(DecodingUpdate);
      }
      if (bodyCase_ == BodyOneofCase.DeviceConfiguration) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(DeviceConfiguration);
      }
      if (bodyCase_ == BodyOneofCase.RequestBootInfo) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(RequestBootInfo);
      }
      if (bodyCase_ == BodyOneofCase.BootMessage) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(BootMessage);
      }
      if (bodyCase_ == BodyOneofCase.ResetRadio) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(ResetRadio);
      }
      if (bodyCase_ == BodyOneofCase.Ack) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(Ack);
      }
      if (bodyCase_ == BodyOneofCase.DummyConfig) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(DummyConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IsMulticast != false) {
        size += 1 + 1;
      }
      if (DeviceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeviceId);
      }
      if (CorrelationCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CorrelationCode);
      }
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (bodyCase_ == BodyOneofCase.ForwardExperimentCommand) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ForwardExperimentCommand);
      }
      if (bodyCase_ == BodyOneofCase.ExperimentResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExperimentResponse);
      }
      if (bodyCase_ == BodyOneofCase.MeasurementStreamRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MeasurementStreamRequest);
      }
      if (bodyCase_ == BodyOneofCase.MeasurementStreamFragment) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MeasurementStreamFragment);
      }
      if (bodyCase_ == BodyOneofCase.RlncRemoteFlashStartCommand) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RlncRemoteFlashStartCommand);
      }
      if (bodyCase_ == BodyOneofCase.RlncRemoteFlashStopCommand) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RlncRemoteFlashStopCommand);
      }
      if (bodyCase_ == BodyOneofCase.RlncQueryRemoteFlashCommand) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RlncQueryRemoteFlashCommand);
      }
      if (bodyCase_ == BodyOneofCase.RlncRemoteFlashResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RlncRemoteFlashResponse);
      }
      if (bodyCase_ == BodyOneofCase.RlncInitConfigCommand) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RlncInitConfigCommand);
      }
      if (bodyCase_ == BodyOneofCase.RlncEncodedFragment) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RlncEncodedFragment);
      }
      if (bodyCase_ == BodyOneofCase.RlncStateUpdate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RlncStateUpdate);
      }
      if (bodyCase_ == BodyOneofCase.RlncTerminationCommand) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RlncTerminationCommand);
      }
      if (bodyCase_ == BodyOneofCase.DecodingResult) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DecodingResult);
      }
      if (bodyCase_ == BodyOneofCase.DecodingUpdate) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DecodingUpdate);
      }
      if (bodyCase_ == BodyOneofCase.DeviceConfiguration) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeviceConfiguration);
      }
      if (bodyCase_ == BodyOneofCase.RequestBootInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RequestBootInfo);
      }
      if (bodyCase_ == BodyOneofCase.BootMessage) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BootMessage);
      }
      if (bodyCase_ == BodyOneofCase.ResetRadio) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ResetRadio);
      }
      if (bodyCase_ == BodyOneofCase.Ack) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ack);
      }
      if (bodyCase_ == BodyOneofCase.DummyConfig) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DummyConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LoRaMessage other) {
      if (other == null) {
        return;
      }
      if (other.IsMulticast != false) {
        IsMulticast = other.IsMulticast;
      }
      if (other.DeviceId != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.CorrelationCode != 0) {
        CorrelationCode = other.CorrelationCode;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      switch (other.BodyCase) {
        case BodyOneofCase.ForwardExperimentCommand:
          if (ForwardExperimentCommand == null) {
            ForwardExperimentCommand = new global::LoRa.ForwardExperimentCommand();
          }
          ForwardExperimentCommand.MergeFrom(other.ForwardExperimentCommand);
          break;
        case BodyOneofCase.ExperimentResponse:
          if (ExperimentResponse == null) {
            ExperimentResponse = new global::LoRa.ExperimentResponse();
          }
          ExperimentResponse.MergeFrom(other.ExperimentResponse);
          break;
        case BodyOneofCase.MeasurementStreamRequest:
          if (MeasurementStreamRequest == null) {
            MeasurementStreamRequest = new global::LoRa.MeasurementStreamRequest();
          }
          MeasurementStreamRequest.MergeFrom(other.MeasurementStreamRequest);
          break;
        case BodyOneofCase.MeasurementStreamFragment:
          if (MeasurementStreamFragment == null) {
            MeasurementStreamFragment = new global::LoRa.MeasurementStreamFragment();
          }
          MeasurementStreamFragment.MergeFrom(other.MeasurementStreamFragment);
          break;
        case BodyOneofCase.RlncRemoteFlashStartCommand:
          if (RlncRemoteFlashStartCommand == null) {
            RlncRemoteFlashStartCommand = new global::LoRa.RlncRemoteFlashStartCommand();
          }
          RlncRemoteFlashStartCommand.MergeFrom(other.RlncRemoteFlashStartCommand);
          break;
        case BodyOneofCase.RlncRemoteFlashStopCommand:
          if (RlncRemoteFlashStopCommand == null) {
            RlncRemoteFlashStopCommand = new global::LoRa.RlncRemoteFlashStopCommand();
          }
          RlncRemoteFlashStopCommand.MergeFrom(other.RlncRemoteFlashStopCommand);
          break;
        case BodyOneofCase.RlncQueryRemoteFlashCommand:
          if (RlncQueryRemoteFlashCommand == null) {
            RlncQueryRemoteFlashCommand = new global::LoRa.RlncQueryRemoteFlashState();
          }
          RlncQueryRemoteFlashCommand.MergeFrom(other.RlncQueryRemoteFlashCommand);
          break;
        case BodyOneofCase.RlncRemoteFlashResponse:
          if (RlncRemoteFlashResponse == null) {
            RlncRemoteFlashResponse = new global::LoRa.RlncRemoteFlashResponse();
          }
          RlncRemoteFlashResponse.MergeFrom(other.RlncRemoteFlashResponse);
          break;
        case BodyOneofCase.RlncInitConfigCommand:
          if (RlncInitConfigCommand == null) {
            RlncInitConfigCommand = new global::LoRa.RlncInitConfigCommand();
          }
          RlncInitConfigCommand.MergeFrom(other.RlncInitConfigCommand);
          break;
        case BodyOneofCase.RlncEncodedFragment:
          if (RlncEncodedFragment == null) {
            RlncEncodedFragment = new global::LoRa.RlncEncodedFragment();
          }
          RlncEncodedFragment.MergeFrom(other.RlncEncodedFragment);
          break;
        case BodyOneofCase.RlncStateUpdate:
          if (RlncStateUpdate == null) {
            RlncStateUpdate = new global::LoRa.RlncStateUpdate();
          }
          RlncStateUpdate.MergeFrom(other.RlncStateUpdate);
          break;
        case BodyOneofCase.RlncTerminationCommand:
          if (RlncTerminationCommand == null) {
            RlncTerminationCommand = new global::LoRa.RlncTerminationCommand();
          }
          RlncTerminationCommand.MergeFrom(other.RlncTerminationCommand);
          break;
        case BodyOneofCase.DecodingResult:
          if (DecodingResult == null) {
            DecodingResult = new global::LoRa.DecodingResult();
          }
          DecodingResult.MergeFrom(other.DecodingResult);
          break;
        case BodyOneofCase.DecodingUpdate:
          if (DecodingUpdate == null) {
            DecodingUpdate = new global::LoRa.DecodingUpdate();
          }
          DecodingUpdate.MergeFrom(other.DecodingUpdate);
          break;
        case BodyOneofCase.DeviceConfiguration:
          if (DeviceConfiguration == null) {
            DeviceConfiguration = new global::LoRa.DeviceConfiguration();
          }
          DeviceConfiguration.MergeFrom(other.DeviceConfiguration);
          break;
        case BodyOneofCase.RequestBootInfo:
          if (RequestBootInfo == null) {
            RequestBootInfo = new global::LoRa.RequestBootInfo();
          }
          RequestBootInfo.MergeFrom(other.RequestBootInfo);
          break;
        case BodyOneofCase.BootMessage:
          if (BootMessage == null) {
            BootMessage = new global::LoRa.BootMessage();
          }
          BootMessage.MergeFrom(other.BootMessage);
          break;
        case BodyOneofCase.ResetRadio:
          if (ResetRadio == null) {
            ResetRadio = new global::LoRa.LoRaReset();
          }
          ResetRadio.MergeFrom(other.ResetRadio);
          break;
        case BodyOneofCase.Ack:
          if (Ack == null) {
            Ack = new global::LoRa.LoRaAck();
          }
          Ack.MergeFrom(other.Ack);
          break;
        case BodyOneofCase.DummyConfig:
          if (DummyConfig == null) {
            DummyConfig = new global::LoRa.DummyConfig();
          }
          DummyConfig.MergeFrom(other.DummyConfig);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsMulticast = input.ReadBool();
            break;
          }
          case 16: {
            DeviceId = input.ReadUInt32();
            break;
          }
          case 24: {
            CorrelationCode = input.ReadUInt32();
            break;
          }
          case 34: {
            Payload = input.ReadBytes();
            break;
          }
          case 42: {
            global::LoRa.ForwardExperimentCommand subBuilder = new global::LoRa.ForwardExperimentCommand();
            if (bodyCase_ == BodyOneofCase.ForwardExperimentCommand) {
              subBuilder.MergeFrom(ForwardExperimentCommand);
            }
            input.ReadMessage(subBuilder);
            ForwardExperimentCommand = subBuilder;
            break;
          }
          case 50: {
            global::LoRa.ExperimentResponse subBuilder = new global::LoRa.ExperimentResponse();
            if (bodyCase_ == BodyOneofCase.ExperimentResponse) {
              subBuilder.MergeFrom(ExperimentResponse);
            }
            input.ReadMessage(subBuilder);
            ExperimentResponse = subBuilder;
            break;
          }
          case 58: {
            global::LoRa.MeasurementStreamRequest subBuilder = new global::LoRa.MeasurementStreamRequest();
            if (bodyCase_ == BodyOneofCase.MeasurementStreamRequest) {
              subBuilder.MergeFrom(MeasurementStreamRequest);
            }
            input.ReadMessage(subBuilder);
            MeasurementStreamRequest = subBuilder;
            break;
          }
          case 66: {
            global::LoRa.MeasurementStreamFragment subBuilder = new global::LoRa.MeasurementStreamFragment();
            if (bodyCase_ == BodyOneofCase.MeasurementStreamFragment) {
              subBuilder.MergeFrom(MeasurementStreamFragment);
            }
            input.ReadMessage(subBuilder);
            MeasurementStreamFragment = subBuilder;
            break;
          }
          case 74: {
            global::LoRa.RlncRemoteFlashStartCommand subBuilder = new global::LoRa.RlncRemoteFlashStartCommand();
            if (bodyCase_ == BodyOneofCase.RlncRemoteFlashStartCommand) {
              subBuilder.MergeFrom(RlncRemoteFlashStartCommand);
            }
            input.ReadMessage(subBuilder);
            RlncRemoteFlashStartCommand = subBuilder;
            break;
          }
          case 82: {
            global::LoRa.RlncRemoteFlashStopCommand subBuilder = new global::LoRa.RlncRemoteFlashStopCommand();
            if (bodyCase_ == BodyOneofCase.RlncRemoteFlashStopCommand) {
              subBuilder.MergeFrom(RlncRemoteFlashStopCommand);
            }
            input.ReadMessage(subBuilder);
            RlncRemoteFlashStopCommand = subBuilder;
            break;
          }
          case 90: {
            global::LoRa.RlncQueryRemoteFlashState subBuilder = new global::LoRa.RlncQueryRemoteFlashState();
            if (bodyCase_ == BodyOneofCase.RlncQueryRemoteFlashCommand) {
              subBuilder.MergeFrom(RlncQueryRemoteFlashCommand);
            }
            input.ReadMessage(subBuilder);
            RlncQueryRemoteFlashCommand = subBuilder;
            break;
          }
          case 98: {
            global::LoRa.RlncRemoteFlashResponse subBuilder = new global::LoRa.RlncRemoteFlashResponse();
            if (bodyCase_ == BodyOneofCase.RlncRemoteFlashResponse) {
              subBuilder.MergeFrom(RlncRemoteFlashResponse);
            }
            input.ReadMessage(subBuilder);
            RlncRemoteFlashResponse = subBuilder;
            break;
          }
          case 106: {
            global::LoRa.RlncInitConfigCommand subBuilder = new global::LoRa.RlncInitConfigCommand();
            if (bodyCase_ == BodyOneofCase.RlncInitConfigCommand) {
              subBuilder.MergeFrom(RlncInitConfigCommand);
            }
            input.ReadMessage(subBuilder);
            RlncInitConfigCommand = subBuilder;
            break;
          }
          case 114: {
            global::LoRa.RlncEncodedFragment subBuilder = new global::LoRa.RlncEncodedFragment();
            if (bodyCase_ == BodyOneofCase.RlncEncodedFragment) {
              subBuilder.MergeFrom(RlncEncodedFragment);
            }
            input.ReadMessage(subBuilder);
            RlncEncodedFragment = subBuilder;
            break;
          }
          case 122: {
            global::LoRa.RlncStateUpdate subBuilder = new global::LoRa.RlncStateUpdate();
            if (bodyCase_ == BodyOneofCase.RlncStateUpdate) {
              subBuilder.MergeFrom(RlncStateUpdate);
            }
            input.ReadMessage(subBuilder);
            RlncStateUpdate = subBuilder;
            break;
          }
          case 130: {
            global::LoRa.RlncTerminationCommand subBuilder = new global::LoRa.RlncTerminationCommand();
            if (bodyCase_ == BodyOneofCase.RlncTerminationCommand) {
              subBuilder.MergeFrom(RlncTerminationCommand);
            }
            input.ReadMessage(subBuilder);
            RlncTerminationCommand = subBuilder;
            break;
          }
          case 138: {
            global::LoRa.DecodingResult subBuilder = new global::LoRa.DecodingResult();
            if (bodyCase_ == BodyOneofCase.DecodingResult) {
              subBuilder.MergeFrom(DecodingResult);
            }
            input.ReadMessage(subBuilder);
            DecodingResult = subBuilder;
            break;
          }
          case 146: {
            global::LoRa.DecodingUpdate subBuilder = new global::LoRa.DecodingUpdate();
            if (bodyCase_ == BodyOneofCase.DecodingUpdate) {
              subBuilder.MergeFrom(DecodingUpdate);
            }
            input.ReadMessage(subBuilder);
            DecodingUpdate = subBuilder;
            break;
          }
          case 154: {
            global::LoRa.DeviceConfiguration subBuilder = new global::LoRa.DeviceConfiguration();
            if (bodyCase_ == BodyOneofCase.DeviceConfiguration) {
              subBuilder.MergeFrom(DeviceConfiguration);
            }
            input.ReadMessage(subBuilder);
            DeviceConfiguration = subBuilder;
            break;
          }
          case 162: {
            global::LoRa.RequestBootInfo subBuilder = new global::LoRa.RequestBootInfo();
            if (bodyCase_ == BodyOneofCase.RequestBootInfo) {
              subBuilder.MergeFrom(RequestBootInfo);
            }
            input.ReadMessage(subBuilder);
            RequestBootInfo = subBuilder;
            break;
          }
          case 170: {
            global::LoRa.BootMessage subBuilder = new global::LoRa.BootMessage();
            if (bodyCase_ == BodyOneofCase.BootMessage) {
              subBuilder.MergeFrom(BootMessage);
            }
            input.ReadMessage(subBuilder);
            BootMessage = subBuilder;
            break;
          }
          case 178: {
            global::LoRa.LoRaReset subBuilder = new global::LoRa.LoRaReset();
            if (bodyCase_ == BodyOneofCase.ResetRadio) {
              subBuilder.MergeFrom(ResetRadio);
            }
            input.ReadMessage(subBuilder);
            ResetRadio = subBuilder;
            break;
          }
          case 186: {
            global::LoRa.LoRaAck subBuilder = new global::LoRa.LoRaAck();
            if (bodyCase_ == BodyOneofCase.Ack) {
              subBuilder.MergeFrom(Ack);
            }
            input.ReadMessage(subBuilder);
            Ack = subBuilder;
            break;
          }
          case 194: {
            global::LoRa.DummyConfig subBuilder = new global::LoRa.DummyConfig();
            if (bodyCase_ == BodyOneofCase.DummyConfig) {
              subBuilder.MergeFrom(DummyConfig);
            }
            input.ReadMessage(subBuilder);
            DummyConfig = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsMulticast = input.ReadBool();
            break;
          }
          case 16: {
            DeviceId = input.ReadUInt32();
            break;
          }
          case 24: {
            CorrelationCode = input.ReadUInt32();
            break;
          }
          case 34: {
            Payload = input.ReadBytes();
            break;
          }
          case 42: {
            global::LoRa.ForwardExperimentCommand subBuilder = new global::LoRa.ForwardExperimentCommand();
            if (bodyCase_ == BodyOneofCase.ForwardExperimentCommand) {
              subBuilder.MergeFrom(ForwardExperimentCommand);
            }
            input.ReadMessage(subBuilder);
            ForwardExperimentCommand = subBuilder;
            break;
          }
          case 50: {
            global::LoRa.ExperimentResponse subBuilder = new global::LoRa.ExperimentResponse();
            if (bodyCase_ == BodyOneofCase.ExperimentResponse) {
              subBuilder.MergeFrom(ExperimentResponse);
            }
            input.ReadMessage(subBuilder);
            ExperimentResponse = subBuilder;
            break;
          }
          case 58: {
            global::LoRa.MeasurementStreamRequest subBuilder = new global::LoRa.MeasurementStreamRequest();
            if (bodyCase_ == BodyOneofCase.MeasurementStreamRequest) {
              subBuilder.MergeFrom(MeasurementStreamRequest);
            }
            input.ReadMessage(subBuilder);
            MeasurementStreamRequest = subBuilder;
            break;
          }
          case 66: {
            global::LoRa.MeasurementStreamFragment subBuilder = new global::LoRa.MeasurementStreamFragment();
            if (bodyCase_ == BodyOneofCase.MeasurementStreamFragment) {
              subBuilder.MergeFrom(MeasurementStreamFragment);
            }
            input.ReadMessage(subBuilder);
            MeasurementStreamFragment = subBuilder;
            break;
          }
          case 74: {
            global::LoRa.RlncRemoteFlashStartCommand subBuilder = new global::LoRa.RlncRemoteFlashStartCommand();
            if (bodyCase_ == BodyOneofCase.RlncRemoteFlashStartCommand) {
              subBuilder.MergeFrom(RlncRemoteFlashStartCommand);
            }
            input.ReadMessage(subBuilder);
            RlncRemoteFlashStartCommand = subBuilder;
            break;
          }
          case 82: {
            global::LoRa.RlncRemoteFlashStopCommand subBuilder = new global::LoRa.RlncRemoteFlashStopCommand();
            if (bodyCase_ == BodyOneofCase.RlncRemoteFlashStopCommand) {
              subBuilder.MergeFrom(RlncRemoteFlashStopCommand);
            }
            input.ReadMessage(subBuilder);
            RlncRemoteFlashStopCommand = subBuilder;
            break;
          }
          case 90: {
            global::LoRa.RlncQueryRemoteFlashState subBuilder = new global::LoRa.RlncQueryRemoteFlashState();
            if (bodyCase_ == BodyOneofCase.RlncQueryRemoteFlashCommand) {
              subBuilder.MergeFrom(RlncQueryRemoteFlashCommand);
            }
            input.ReadMessage(subBuilder);
            RlncQueryRemoteFlashCommand = subBuilder;
            break;
          }
          case 98: {
            global::LoRa.RlncRemoteFlashResponse subBuilder = new global::LoRa.RlncRemoteFlashResponse();
            if (bodyCase_ == BodyOneofCase.RlncRemoteFlashResponse) {
              subBuilder.MergeFrom(RlncRemoteFlashResponse);
            }
            input.ReadMessage(subBuilder);
            RlncRemoteFlashResponse = subBuilder;
            break;
          }
          case 106: {
            global::LoRa.RlncInitConfigCommand subBuilder = new global::LoRa.RlncInitConfigCommand();
            if (bodyCase_ == BodyOneofCase.RlncInitConfigCommand) {
              subBuilder.MergeFrom(RlncInitConfigCommand);
            }
            input.ReadMessage(subBuilder);
            RlncInitConfigCommand = subBuilder;
            break;
          }
          case 114: {
            global::LoRa.RlncEncodedFragment subBuilder = new global::LoRa.RlncEncodedFragment();
            if (bodyCase_ == BodyOneofCase.RlncEncodedFragment) {
              subBuilder.MergeFrom(RlncEncodedFragment);
            }
            input.ReadMessage(subBuilder);
            RlncEncodedFragment = subBuilder;
            break;
          }
          case 122: {
            global::LoRa.RlncStateUpdate subBuilder = new global::LoRa.RlncStateUpdate();
            if (bodyCase_ == BodyOneofCase.RlncStateUpdate) {
              subBuilder.MergeFrom(RlncStateUpdate);
            }
            input.ReadMessage(subBuilder);
            RlncStateUpdate = subBuilder;
            break;
          }
          case 130: {
            global::LoRa.RlncTerminationCommand subBuilder = new global::LoRa.RlncTerminationCommand();
            if (bodyCase_ == BodyOneofCase.RlncTerminationCommand) {
              subBuilder.MergeFrom(RlncTerminationCommand);
            }
            input.ReadMessage(subBuilder);
            RlncTerminationCommand = subBuilder;
            break;
          }
          case 138: {
            global::LoRa.DecodingResult subBuilder = new global::LoRa.DecodingResult();
            if (bodyCase_ == BodyOneofCase.DecodingResult) {
              subBuilder.MergeFrom(DecodingResult);
            }
            input.ReadMessage(subBuilder);
            DecodingResult = subBuilder;
            break;
          }
          case 146: {
            global::LoRa.DecodingUpdate subBuilder = new global::LoRa.DecodingUpdate();
            if (bodyCase_ == BodyOneofCase.DecodingUpdate) {
              subBuilder.MergeFrom(DecodingUpdate);
            }
            input.ReadMessage(subBuilder);
            DecodingUpdate = subBuilder;
            break;
          }
          case 154: {
            global::LoRa.DeviceConfiguration subBuilder = new global::LoRa.DeviceConfiguration();
            if (bodyCase_ == BodyOneofCase.DeviceConfiguration) {
              subBuilder.MergeFrom(DeviceConfiguration);
            }
            input.ReadMessage(subBuilder);
            DeviceConfiguration = subBuilder;
            break;
          }
          case 162: {
            global::LoRa.RequestBootInfo subBuilder = new global::LoRa.RequestBootInfo();
            if (bodyCase_ == BodyOneofCase.RequestBootInfo) {
              subBuilder.MergeFrom(RequestBootInfo);
            }
            input.ReadMessage(subBuilder);
            RequestBootInfo = subBuilder;
            break;
          }
          case 170: {
            global::LoRa.BootMessage subBuilder = new global::LoRa.BootMessage();
            if (bodyCase_ == BodyOneofCase.BootMessage) {
              subBuilder.MergeFrom(BootMessage);
            }
            input.ReadMessage(subBuilder);
            BootMessage = subBuilder;
            break;
          }
          case 178: {
            global::LoRa.LoRaReset subBuilder = new global::LoRa.LoRaReset();
            if (bodyCase_ == BodyOneofCase.ResetRadio) {
              subBuilder.MergeFrom(ResetRadio);
            }
            input.ReadMessage(subBuilder);
            ResetRadio = subBuilder;
            break;
          }
          case 186: {
            global::LoRa.LoRaAck subBuilder = new global::LoRa.LoRaAck();
            if (bodyCase_ == BodyOneofCase.Ack) {
              subBuilder.MergeFrom(Ack);
            }
            input.ReadMessage(subBuilder);
            Ack = subBuilder;
            break;
          }
          case 194: {
            global::LoRa.DummyConfig subBuilder = new global::LoRa.DummyConfig();
            if (bodyCase_ == BodyOneofCase.DummyConfig) {
              subBuilder.MergeFrom(DummyConfig);
            }
            input.ReadMessage(subBuilder);
            DummyConfig = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
