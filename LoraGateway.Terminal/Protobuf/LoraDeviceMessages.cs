// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: lora_device_messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LoRa {

  /// <summary>Holder for reflection information generated from lora_device_messages.proto</summary>
  public static partial class LoraDeviceMessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for lora_device_messages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LoraDeviceMessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chpsb3JhX2RldmljZV9tZXNzYWdlcy5wcm90bxoec2hhcmVkL2V4cGVyaW1l",
            "bnRfY29uZmlnLnByb3RvGhVzaGFyZWQvZmlybXdhcmUucHJvdG8iugQKC0xv",
            "UmFNZXNzYWdlEhMKC0lzTXVsdGljYXN0GAEgASgIEhAKCERldmljZUlkGAIg",
            "ASgNEhcKD0NvcnJlbGF0aW9uQ29kZRgDIAEoDRIPCgdQYXlsb2FkGAQgASgM",
            "Ej0KGGZvcndhcmRSYWRpb0NvbmZpZ1VwZGF0ZRgGIAEoCzIZLkZvcndhcmRS",
            "YWRpb0NvbmZpZ1VwZGF0ZUgAEj0KGGZvcndhcmRFeHBlcmltZW50Q29tbWFu",
            "ZBgHIAEoCzIZLkZvcndhcmRFeHBlcmltZW50Q29tbWFuZEgAEj0KGG1lYXN1",
            "cmVtZW50U3RyZWFtUmVxdWVzdBgIIAEoCzIZLk1lYXN1cmVtZW50U3RyZWFt",
            "UmVxdWVzdEgAEj8KGW1lYXN1cmVtZW50U3RyZWFtRnJhZ21lbnQYCSABKAsy",
            "Gi5NZWFzdXJlbWVudFN0cmVhbUZyYWdtZW50SAASNwoVcmxuY0luaXRDb25m",
            "aWdDb21tYW5kGAogASgLMhYuUmxuY0luaXRDb25maWdDb21tYW5kSAASMwoT",
            "cmxuY0VuY29kZWRGcmFnbWVudBgLIAEoCzIULlJsbmNFbmNvZGVkRnJhZ21l",
            "bnRIABIrCg9ybG5jU3RhdGVVcGRhdGUYDCABKAsyEC5SbG5jU3RhdGVVcGRh",
            "dGVIABI5ChZybG5jVGVybWluYXRpb25Db21tYW5kGA0gASgLMhcuUmxuY1Rl",
            "cm1pbmF0aW9uQ29tbWFuZEgAQgYKBEJvZHlCB6oCBExvUmFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::LoRa.ExperimentConfigReflection.Descriptor, global::LoRa.FirmwareReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LoRa.LoRaMessage), global::LoRa.LoRaMessage.Parser, new[]{ "IsMulticast", "DeviceId", "CorrelationCode", "Payload", "ForwardRadioConfigUpdate", "ForwardExperimentCommand", "MeasurementStreamRequest", "MeasurementStreamFragment", "RlncInitConfigCommand", "RlncEncodedFragment", "RlncStateUpdate", "RlncTerminationCommand" }, new[]{ "Body" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LoRaMessage : pb::IMessage<LoRaMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoRaMessage> _parser = new pb::MessageParser<LoRaMessage>(() => new LoRaMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LoRaMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LoRa.LoraDeviceMessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoRaMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoRaMessage(LoRaMessage other) : this() {
      isMulticast_ = other.isMulticast_;
      deviceId_ = other.deviceId_;
      correlationCode_ = other.correlationCode_;
      payload_ = other.payload_;
      switch (other.BodyCase) {
        case BodyOneofCase.ForwardRadioConfigUpdate:
          ForwardRadioConfigUpdate = other.ForwardRadioConfigUpdate.Clone();
          break;
        case BodyOneofCase.ForwardExperimentCommand:
          ForwardExperimentCommand = other.ForwardExperimentCommand.Clone();
          break;
        case BodyOneofCase.MeasurementStreamRequest:
          MeasurementStreamRequest = other.MeasurementStreamRequest.Clone();
          break;
        case BodyOneofCase.MeasurementStreamFragment:
          MeasurementStreamFragment = other.MeasurementStreamFragment.Clone();
          break;
        case BodyOneofCase.RlncInitConfigCommand:
          RlncInitConfigCommand = other.RlncInitConfigCommand.Clone();
          break;
        case BodyOneofCase.RlncEncodedFragment:
          RlncEncodedFragment = other.RlncEncodedFragment.Clone();
          break;
        case BodyOneofCase.RlncStateUpdate:
          RlncStateUpdate = other.RlncStateUpdate.Clone();
          break;
        case BodyOneofCase.RlncTerminationCommand:
          RlncTerminationCommand = other.RlncTerminationCommand.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoRaMessage Clone() {
      return new LoRaMessage(this);
    }

    /// <summary>Field number for the "IsMulticast" field.</summary>
    public const int IsMulticastFieldNumber = 1;
    private bool isMulticast_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsMulticast {
      get { return isMulticast_; }
      set {
        isMulticast_ = value;
      }
    }

    /// <summary>Field number for the "DeviceId" field.</summary>
    public const int DeviceIdFieldNumber = 2;
    private uint deviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = value;
      }
    }

    /// <summary>Field number for the "CorrelationCode" field.</summary>
    public const int CorrelationCodeFieldNumber = 3;
    private uint correlationCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CorrelationCode {
      get { return correlationCode_; }
      set {
        correlationCode_ = value;
      }
    }

    /// <summary>Field number for the "Payload" field.</summary>
    public const int PayloadFieldNumber = 4;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "forwardRadioConfigUpdate" field.</summary>
    public const int ForwardRadioConfigUpdateFieldNumber = 6;
    /// <summary>
    /// ForwardSequenceConfig sequenceConfig = 5;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.ForwardRadioConfigUpdate ForwardRadioConfigUpdate {
      get { return bodyCase_ == BodyOneofCase.ForwardRadioConfigUpdate ? (global::LoRa.ForwardRadioConfigUpdate) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.ForwardRadioConfigUpdate;
      }
    }

    /// <summary>Field number for the "forwardExperimentCommand" field.</summary>
    public const int ForwardExperimentCommandFieldNumber = 7;
    /// <summary>
    /// Set role TX/RX, play/pause or switch to predefined experiment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.ForwardExperimentCommand ForwardExperimentCommand {
      get { return bodyCase_ == BodyOneofCase.ForwardExperimentCommand ? (global::LoRa.ForwardExperimentCommand) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.ForwardExperimentCommand;
      }
    }

    /// <summary>Field number for the "measurementStreamRequest" field.</summary>
    public const int MeasurementStreamRequestFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.MeasurementStreamRequest MeasurementStreamRequest {
      get { return bodyCase_ == BodyOneofCase.MeasurementStreamRequest ? (global::LoRa.MeasurementStreamRequest) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.MeasurementStreamRequest;
      }
    }

    /// <summary>Field number for the "measurementStreamFragment" field.</summary>
    public const int MeasurementStreamFragmentFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.MeasurementStreamFragment MeasurementStreamFragment {
      get { return bodyCase_ == BodyOneofCase.MeasurementStreamFragment ? (global::LoRa.MeasurementStreamFragment) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.MeasurementStreamFragment;
      }
    }

    /// <summary>Field number for the "rlncInitConfigCommand" field.</summary>
    public const int RlncInitConfigCommandFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.RlncInitConfigCommand RlncInitConfigCommand {
      get { return bodyCase_ == BodyOneofCase.RlncInitConfigCommand ? (global::LoRa.RlncInitConfigCommand) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.RlncInitConfigCommand;
      }
    }

    /// <summary>Field number for the "rlncEncodedFragment" field.</summary>
    public const int RlncEncodedFragmentFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.RlncEncodedFragment RlncEncodedFragment {
      get { return bodyCase_ == BodyOneofCase.RlncEncodedFragment ? (global::LoRa.RlncEncodedFragment) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.RlncEncodedFragment;
      }
    }

    /// <summary>Field number for the "rlncStateUpdate" field.</summary>
    public const int RlncStateUpdateFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.RlncStateUpdate RlncStateUpdate {
      get { return bodyCase_ == BodyOneofCase.RlncStateUpdate ? (global::LoRa.RlncStateUpdate) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.RlncStateUpdate;
      }
    }

    /// <summary>Field number for the "rlncTerminationCommand" field.</summary>
    public const int RlncTerminationCommandFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LoRa.RlncTerminationCommand RlncTerminationCommand {
      get { return bodyCase_ == BodyOneofCase.RlncTerminationCommand ? (global::LoRa.RlncTerminationCommand) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.RlncTerminationCommand;
      }
    }

    private object body_;
    /// <summary>Enum of possible cases for the "Body" oneof.</summary>
    public enum BodyOneofCase {
      None = 0,
      ForwardRadioConfigUpdate = 6,
      ForwardExperimentCommand = 7,
      MeasurementStreamRequest = 8,
      MeasurementStreamFragment = 9,
      RlncInitConfigCommand = 10,
      RlncEncodedFragment = 11,
      RlncStateUpdate = 12,
      RlncTerminationCommand = 13,
    }
    private BodyOneofCase bodyCase_ = BodyOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BodyOneofCase BodyCase {
      get { return bodyCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBody() {
      bodyCase_ = BodyOneofCase.None;
      body_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LoRaMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LoRaMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsMulticast != other.IsMulticast) return false;
      if (DeviceId != other.DeviceId) return false;
      if (CorrelationCode != other.CorrelationCode) return false;
      if (Payload != other.Payload) return false;
      if (!object.Equals(ForwardRadioConfigUpdate, other.ForwardRadioConfigUpdate)) return false;
      if (!object.Equals(ForwardExperimentCommand, other.ForwardExperimentCommand)) return false;
      if (!object.Equals(MeasurementStreamRequest, other.MeasurementStreamRequest)) return false;
      if (!object.Equals(MeasurementStreamFragment, other.MeasurementStreamFragment)) return false;
      if (!object.Equals(RlncInitConfigCommand, other.RlncInitConfigCommand)) return false;
      if (!object.Equals(RlncEncodedFragment, other.RlncEncodedFragment)) return false;
      if (!object.Equals(RlncStateUpdate, other.RlncStateUpdate)) return false;
      if (!object.Equals(RlncTerminationCommand, other.RlncTerminationCommand)) return false;
      if (BodyCase != other.BodyCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IsMulticast != false) hash ^= IsMulticast.GetHashCode();
      if (DeviceId != 0) hash ^= DeviceId.GetHashCode();
      if (CorrelationCode != 0) hash ^= CorrelationCode.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (bodyCase_ == BodyOneofCase.ForwardRadioConfigUpdate) hash ^= ForwardRadioConfigUpdate.GetHashCode();
      if (bodyCase_ == BodyOneofCase.ForwardExperimentCommand) hash ^= ForwardExperimentCommand.GetHashCode();
      if (bodyCase_ == BodyOneofCase.MeasurementStreamRequest) hash ^= MeasurementStreamRequest.GetHashCode();
      if (bodyCase_ == BodyOneofCase.MeasurementStreamFragment) hash ^= MeasurementStreamFragment.GetHashCode();
      if (bodyCase_ == BodyOneofCase.RlncInitConfigCommand) hash ^= RlncInitConfigCommand.GetHashCode();
      if (bodyCase_ == BodyOneofCase.RlncEncodedFragment) hash ^= RlncEncodedFragment.GetHashCode();
      if (bodyCase_ == BodyOneofCase.RlncStateUpdate) hash ^= RlncStateUpdate.GetHashCode();
      if (bodyCase_ == BodyOneofCase.RlncTerminationCommand) hash ^= RlncTerminationCommand.GetHashCode();
      hash ^= (int) bodyCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsMulticast != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsMulticast);
      }
      if (DeviceId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(DeviceId);
      }
      if (CorrelationCode != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(CorrelationCode);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Payload);
      }
      if (bodyCase_ == BodyOneofCase.ForwardRadioConfigUpdate) {
        output.WriteRawTag(50);
        output.WriteMessage(ForwardRadioConfigUpdate);
      }
      if (bodyCase_ == BodyOneofCase.ForwardExperimentCommand) {
        output.WriteRawTag(58);
        output.WriteMessage(ForwardExperimentCommand);
      }
      if (bodyCase_ == BodyOneofCase.MeasurementStreamRequest) {
        output.WriteRawTag(66);
        output.WriteMessage(MeasurementStreamRequest);
      }
      if (bodyCase_ == BodyOneofCase.MeasurementStreamFragment) {
        output.WriteRawTag(74);
        output.WriteMessage(MeasurementStreamFragment);
      }
      if (bodyCase_ == BodyOneofCase.RlncInitConfigCommand) {
        output.WriteRawTag(82);
        output.WriteMessage(RlncInitConfigCommand);
      }
      if (bodyCase_ == BodyOneofCase.RlncEncodedFragment) {
        output.WriteRawTag(90);
        output.WriteMessage(RlncEncodedFragment);
      }
      if (bodyCase_ == BodyOneofCase.RlncStateUpdate) {
        output.WriteRawTag(98);
        output.WriteMessage(RlncStateUpdate);
      }
      if (bodyCase_ == BodyOneofCase.RlncTerminationCommand) {
        output.WriteRawTag(106);
        output.WriteMessage(RlncTerminationCommand);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsMulticast != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsMulticast);
      }
      if (DeviceId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(DeviceId);
      }
      if (CorrelationCode != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(CorrelationCode);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Payload);
      }
      if (bodyCase_ == BodyOneofCase.ForwardRadioConfigUpdate) {
        output.WriteRawTag(50);
        output.WriteMessage(ForwardRadioConfigUpdate);
      }
      if (bodyCase_ == BodyOneofCase.ForwardExperimentCommand) {
        output.WriteRawTag(58);
        output.WriteMessage(ForwardExperimentCommand);
      }
      if (bodyCase_ == BodyOneofCase.MeasurementStreamRequest) {
        output.WriteRawTag(66);
        output.WriteMessage(MeasurementStreamRequest);
      }
      if (bodyCase_ == BodyOneofCase.MeasurementStreamFragment) {
        output.WriteRawTag(74);
        output.WriteMessage(MeasurementStreamFragment);
      }
      if (bodyCase_ == BodyOneofCase.RlncInitConfigCommand) {
        output.WriteRawTag(82);
        output.WriteMessage(RlncInitConfigCommand);
      }
      if (bodyCase_ == BodyOneofCase.RlncEncodedFragment) {
        output.WriteRawTag(90);
        output.WriteMessage(RlncEncodedFragment);
      }
      if (bodyCase_ == BodyOneofCase.RlncStateUpdate) {
        output.WriteRawTag(98);
        output.WriteMessage(RlncStateUpdate);
      }
      if (bodyCase_ == BodyOneofCase.RlncTerminationCommand) {
        output.WriteRawTag(106);
        output.WriteMessage(RlncTerminationCommand);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IsMulticast != false) {
        size += 1 + 1;
      }
      if (DeviceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeviceId);
      }
      if (CorrelationCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CorrelationCode);
      }
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (bodyCase_ == BodyOneofCase.ForwardRadioConfigUpdate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ForwardRadioConfigUpdate);
      }
      if (bodyCase_ == BodyOneofCase.ForwardExperimentCommand) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ForwardExperimentCommand);
      }
      if (bodyCase_ == BodyOneofCase.MeasurementStreamRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MeasurementStreamRequest);
      }
      if (bodyCase_ == BodyOneofCase.MeasurementStreamFragment) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MeasurementStreamFragment);
      }
      if (bodyCase_ == BodyOneofCase.RlncInitConfigCommand) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RlncInitConfigCommand);
      }
      if (bodyCase_ == BodyOneofCase.RlncEncodedFragment) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RlncEncodedFragment);
      }
      if (bodyCase_ == BodyOneofCase.RlncStateUpdate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RlncStateUpdate);
      }
      if (bodyCase_ == BodyOneofCase.RlncTerminationCommand) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RlncTerminationCommand);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LoRaMessage other) {
      if (other == null) {
        return;
      }
      if (other.IsMulticast != false) {
        IsMulticast = other.IsMulticast;
      }
      if (other.DeviceId != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.CorrelationCode != 0) {
        CorrelationCode = other.CorrelationCode;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      switch (other.BodyCase) {
        case BodyOneofCase.ForwardRadioConfigUpdate:
          if (ForwardRadioConfigUpdate == null) {
            ForwardRadioConfigUpdate = new global::LoRa.ForwardRadioConfigUpdate();
          }
          ForwardRadioConfigUpdate.MergeFrom(other.ForwardRadioConfigUpdate);
          break;
        case BodyOneofCase.ForwardExperimentCommand:
          if (ForwardExperimentCommand == null) {
            ForwardExperimentCommand = new global::LoRa.ForwardExperimentCommand();
          }
          ForwardExperimentCommand.MergeFrom(other.ForwardExperimentCommand);
          break;
        case BodyOneofCase.MeasurementStreamRequest:
          if (MeasurementStreamRequest == null) {
            MeasurementStreamRequest = new global::LoRa.MeasurementStreamRequest();
          }
          MeasurementStreamRequest.MergeFrom(other.MeasurementStreamRequest);
          break;
        case BodyOneofCase.MeasurementStreamFragment:
          if (MeasurementStreamFragment == null) {
            MeasurementStreamFragment = new global::LoRa.MeasurementStreamFragment();
          }
          MeasurementStreamFragment.MergeFrom(other.MeasurementStreamFragment);
          break;
        case BodyOneofCase.RlncInitConfigCommand:
          if (RlncInitConfigCommand == null) {
            RlncInitConfigCommand = new global::LoRa.RlncInitConfigCommand();
          }
          RlncInitConfigCommand.MergeFrom(other.RlncInitConfigCommand);
          break;
        case BodyOneofCase.RlncEncodedFragment:
          if (RlncEncodedFragment == null) {
            RlncEncodedFragment = new global::LoRa.RlncEncodedFragment();
          }
          RlncEncodedFragment.MergeFrom(other.RlncEncodedFragment);
          break;
        case BodyOneofCase.RlncStateUpdate:
          if (RlncStateUpdate == null) {
            RlncStateUpdate = new global::LoRa.RlncStateUpdate();
          }
          RlncStateUpdate.MergeFrom(other.RlncStateUpdate);
          break;
        case BodyOneofCase.RlncTerminationCommand:
          if (RlncTerminationCommand == null) {
            RlncTerminationCommand = new global::LoRa.RlncTerminationCommand();
          }
          RlncTerminationCommand.MergeFrom(other.RlncTerminationCommand);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsMulticast = input.ReadBool();
            break;
          }
          case 16: {
            DeviceId = input.ReadUInt32();
            break;
          }
          case 24: {
            CorrelationCode = input.ReadUInt32();
            break;
          }
          case 34: {
            Payload = input.ReadBytes();
            break;
          }
          case 50: {
            global::LoRa.ForwardRadioConfigUpdate subBuilder = new global::LoRa.ForwardRadioConfigUpdate();
            if (bodyCase_ == BodyOneofCase.ForwardRadioConfigUpdate) {
              subBuilder.MergeFrom(ForwardRadioConfigUpdate);
            }
            input.ReadMessage(subBuilder);
            ForwardRadioConfigUpdate = subBuilder;
            break;
          }
          case 58: {
            global::LoRa.ForwardExperimentCommand subBuilder = new global::LoRa.ForwardExperimentCommand();
            if (bodyCase_ == BodyOneofCase.ForwardExperimentCommand) {
              subBuilder.MergeFrom(ForwardExperimentCommand);
            }
            input.ReadMessage(subBuilder);
            ForwardExperimentCommand = subBuilder;
            break;
          }
          case 66: {
            global::LoRa.MeasurementStreamRequest subBuilder = new global::LoRa.MeasurementStreamRequest();
            if (bodyCase_ == BodyOneofCase.MeasurementStreamRequest) {
              subBuilder.MergeFrom(MeasurementStreamRequest);
            }
            input.ReadMessage(subBuilder);
            MeasurementStreamRequest = subBuilder;
            break;
          }
          case 74: {
            global::LoRa.MeasurementStreamFragment subBuilder = new global::LoRa.MeasurementStreamFragment();
            if (bodyCase_ == BodyOneofCase.MeasurementStreamFragment) {
              subBuilder.MergeFrom(MeasurementStreamFragment);
            }
            input.ReadMessage(subBuilder);
            MeasurementStreamFragment = subBuilder;
            break;
          }
          case 82: {
            global::LoRa.RlncInitConfigCommand subBuilder = new global::LoRa.RlncInitConfigCommand();
            if (bodyCase_ == BodyOneofCase.RlncInitConfigCommand) {
              subBuilder.MergeFrom(RlncInitConfigCommand);
            }
            input.ReadMessage(subBuilder);
            RlncInitConfigCommand = subBuilder;
            break;
          }
          case 90: {
            global::LoRa.RlncEncodedFragment subBuilder = new global::LoRa.RlncEncodedFragment();
            if (bodyCase_ == BodyOneofCase.RlncEncodedFragment) {
              subBuilder.MergeFrom(RlncEncodedFragment);
            }
            input.ReadMessage(subBuilder);
            RlncEncodedFragment = subBuilder;
            break;
          }
          case 98: {
            global::LoRa.RlncStateUpdate subBuilder = new global::LoRa.RlncStateUpdate();
            if (bodyCase_ == BodyOneofCase.RlncStateUpdate) {
              subBuilder.MergeFrom(RlncStateUpdate);
            }
            input.ReadMessage(subBuilder);
            RlncStateUpdate = subBuilder;
            break;
          }
          case 106: {
            global::LoRa.RlncTerminationCommand subBuilder = new global::LoRa.RlncTerminationCommand();
            if (bodyCase_ == BodyOneofCase.RlncTerminationCommand) {
              subBuilder.MergeFrom(RlncTerminationCommand);
            }
            input.ReadMessage(subBuilder);
            RlncTerminationCommand = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsMulticast = input.ReadBool();
            break;
          }
          case 16: {
            DeviceId = input.ReadUInt32();
            break;
          }
          case 24: {
            CorrelationCode = input.ReadUInt32();
            break;
          }
          case 34: {
            Payload = input.ReadBytes();
            break;
          }
          case 50: {
            global::LoRa.ForwardRadioConfigUpdate subBuilder = new global::LoRa.ForwardRadioConfigUpdate();
            if (bodyCase_ == BodyOneofCase.ForwardRadioConfigUpdate) {
              subBuilder.MergeFrom(ForwardRadioConfigUpdate);
            }
            input.ReadMessage(subBuilder);
            ForwardRadioConfigUpdate = subBuilder;
            break;
          }
          case 58: {
            global::LoRa.ForwardExperimentCommand subBuilder = new global::LoRa.ForwardExperimentCommand();
            if (bodyCase_ == BodyOneofCase.ForwardExperimentCommand) {
              subBuilder.MergeFrom(ForwardExperimentCommand);
            }
            input.ReadMessage(subBuilder);
            ForwardExperimentCommand = subBuilder;
            break;
          }
          case 66: {
            global::LoRa.MeasurementStreamRequest subBuilder = new global::LoRa.MeasurementStreamRequest();
            if (bodyCase_ == BodyOneofCase.MeasurementStreamRequest) {
              subBuilder.MergeFrom(MeasurementStreamRequest);
            }
            input.ReadMessage(subBuilder);
            MeasurementStreamRequest = subBuilder;
            break;
          }
          case 74: {
            global::LoRa.MeasurementStreamFragment subBuilder = new global::LoRa.MeasurementStreamFragment();
            if (bodyCase_ == BodyOneofCase.MeasurementStreamFragment) {
              subBuilder.MergeFrom(MeasurementStreamFragment);
            }
            input.ReadMessage(subBuilder);
            MeasurementStreamFragment = subBuilder;
            break;
          }
          case 82: {
            global::LoRa.RlncInitConfigCommand subBuilder = new global::LoRa.RlncInitConfigCommand();
            if (bodyCase_ == BodyOneofCase.RlncInitConfigCommand) {
              subBuilder.MergeFrom(RlncInitConfigCommand);
            }
            input.ReadMessage(subBuilder);
            RlncInitConfigCommand = subBuilder;
            break;
          }
          case 90: {
            global::LoRa.RlncEncodedFragment subBuilder = new global::LoRa.RlncEncodedFragment();
            if (bodyCase_ == BodyOneofCase.RlncEncodedFragment) {
              subBuilder.MergeFrom(RlncEncodedFragment);
            }
            input.ReadMessage(subBuilder);
            RlncEncodedFragment = subBuilder;
            break;
          }
          case 98: {
            global::LoRa.RlncStateUpdate subBuilder = new global::LoRa.RlncStateUpdate();
            if (bodyCase_ == BodyOneofCase.RlncStateUpdate) {
              subBuilder.MergeFrom(RlncStateUpdate);
            }
            input.ReadMessage(subBuilder);
            RlncStateUpdate = subBuilder;
            break;
          }
          case 106: {
            global::LoRa.RlncTerminationCommand subBuilder = new global::LoRa.RlncTerminationCommand();
            if (bodyCase_ == BodyOneofCase.RlncTerminationCommand) {
              subBuilder.MergeFrom(RlncTerminationCommand);
            }
            input.ReadMessage(subBuilder);
            RlncTerminationCommand = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
